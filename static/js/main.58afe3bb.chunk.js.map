{"version":3,"sources":["Resultat.js","Bet.js","Roulete.js","App.js","index.js"],"names":["Resultat","win","bet","winRatio","choose","notSee","className","Bet","startGame","money","useState","inputNumberValue","setInputNumberValue","errorNumber","setErrorNumber","errorMoney","setErrorMoney","inputBetValue","setInputBetValue","activeButton","setActiveButton","handleColorBet","e","color","target","handleChange","id","value","Math","round","onClick","style","border","placeholder","type","onChange","Roulette","numbers","roulette","map","number","App","winIndex","setWinIndex","setRoulette","setMoney","setWin","setBet","setChoose","AnimationRoulette","i","allAnimation","setInterval","length","clearInterval","endRoulette","newIndex","endAnimation","CheckResult","chooseColor","chooseNumber","newindex","prev","floor","random","time","setTimeout","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.58afe3bb.chunk.js","sourcesContent":["import React, {} from 'react';\r\n\r\nconst Resultat = ({win, bet, winRatio, choose}) => {\r\n    const notSee = win !== '';\r\n\r\n        switch (choose) {\r\n    case 'red':\r\n        choose = 'czerwony';\r\n        break;\r\n    case 'green':\r\n        choose = 'zielony';\r\n        break;\r\n    case 'black':\r\n        choose = 'czarny';\r\n        break;\r\n    default:\r\n        break;\r\n    }\r\n\r\n    return (\r\n        <div className='Resultat'>\r\n            <h3>{notSee && 'Rezultat'}</h3>\r\n            <h2>{notSee ? (win ? 'Wygrałeś :' : 'Przegrałeś :') : null}  {notSee ? (win ? (bet * winRatio) + ' monety' : bet + ' monety') : null } </h2>\r\n            <p>{notSee ? 'Obstawiono ' + bet + ' monety na ' + choose : null}</p>\r\n        </div>\r\n        \r\n     );\r\n}\r\n\r\nexport default Resultat;","import React, { useState } from 'react';\r\nimport Resultat from './Resultat'\r\n\r\n\r\nconst Bet = ({startGame, money, win, winRatio, bet, choose}) => {\r\n    const [inputNumberValue, setInputNumberValue] = useState('');\r\n    const [errorNumber, setErrorNumber] = useState(true)\r\n    const [errorMoney, setErrorMoney] = useState(true)\r\n    const [inputBetValue, setInputBetValue] = useState('');\r\n    const [activeButton, setActiveButton] = useState('')\r\n    \r\n\r\n    const handleStartGame = () => {\r\n        if(!errorNumber && !errorMoney){\r\n            startGame(inputBetValue, activeButton, inputNumberValue);\r\n        }\r\n        setInputBetValue('');\r\n        setInputNumberValue('');\r\n        setActiveButton('');\r\n        setErrorNumber(true);\r\n        setErrorMoney(true);\r\n    }\r\n\r\n    const handleColorBet = (e) => {\r\n        setInputNumberValue('')\r\n        setErrorNumber(false)\r\n        let color = e.target.className;\r\n        setActiveButton(color)\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        if(e.target.id === 'number'){\r\n            if(e.target.value < 0 || e.target.value > 36 || e.target.value === ''){\r\n                setErrorNumber(true)\r\n                setInputNumberValue('')\r\n                setActiveButton('')\r\n            }else{\r\n                setErrorNumber(false)\r\n                setInputNumberValue(Math.round(e.target.value))\r\n                setActiveButton('')\r\n            }\r\n        }\r\n        if(e.target.id === 'bet'){\r\n            if(e.target.value < 0 || e.target.value > money || e.target.value === ''){\r\n                setErrorMoney(true)\r\n                setInputBetValue('')\r\n            }else{\r\n                setErrorMoney(false)\r\n                setInputBetValue(Math.round(e.target.value))\r\n            }\r\n        }\r\n    }\r\n\r\n    return ( \r\n        <>  <div className='chooseDiv'>\r\n                <div className='chooseColor'>\r\n                <div className='rules'>\r\n                    <p>x2</p>\r\n                    <p>x50</p>\r\n                    <p>x2</p>\r\n                </div>\r\n                    <button onClick={handleColorBet} style={activeButton === 'black' ? {border: '2px solid yellow'} : null} className='black'>Czarne</button>\r\n                    <button onClick={handleColorBet} style={activeButton === 'green' ? {border: '2px solid yellow'} : null} className='green'>Zielone</button>\r\n                    <button onClick={handleColorBet} style={activeButton === 'red' ? {border: '2px solid yellow'} : null} className='red'>Czerwone</button>\r\n                </div>\r\n                <div className='chooseNumber'>\r\n                    <div className=\"rules\">\r\n                        <p>x35</p>\r\n                    </div>\r\n                    <input placeholder='Wpisz liczbę...' type=\"number\" onChange={handleChange} value={inputNumberValue} id='number'/>\r\n                    {errorNumber ? <span className='error'>! Liczba od 0 do 36 !</span> : null}\r\n                </div>\r\n            </div>   \r\n            <div className='moneyBet rules'>\r\n                <p>Stawka</p>\r\n                <input type=\"number\" placeholder='Wpisz stawkę...' value={inputBetValue} onChange={handleChange} id='bet'/>\r\n                    {errorMoney ? <span className='error'>Nie masz tyle na koncie</span> : null}\r\n                <button onClick={handleStartGame}>Zakręć ruletką</button>\r\n                {money !== 0 && (activeButton === '' && inputNumberValue === '') ? <span className='error'>Wybierz kolor lub wpisz liczbę na którą stawiasz aby zagrać</span> : null}\r\n                {(money === 0) ? <span className='error'>Nie masz środków do gry</span> : null}\r\n            </div>\r\n            <Resultat win={win} winRatio={winRatio} bet={bet} choose={choose}/>\r\n        </>\r\n     );\r\n}\r\n\r\nexport default Bet;","import React from 'react';\r\n\r\nconst Roulette = ({roulette}) => {\r\n    const numbers = roulette.map(number => <div className={number.color} key={number.number}>{number.number}</div>)\r\n\r\n    return ( \r\n            <div className='roulette'>\r\n                {numbers}\r\n            </div>\r\n    );\r\n}\r\n\r\nexport default Roulette;","import React, {useState} from 'react';\n\nimport Bet from './Bet';\nimport Roulette from './Roulete'; \n\nimport './App.css';\n\nconst numbers = [\n  {number: 3, color:'red'},\n  {number: 26, color:'black'},\n  {number: 0, color:'green'},\n  {number: 32, color:'red'},\n  {number: 15, color:'black'},\n  {number: 19, color:'red'},\n  {number: 4, color:'black'},\n  {number: 21, color:'red'},\n  {number: 2, color:'black'},\n  {number: 25, color:'red'},\n  {number: 17, color:'black'},\n  {number: 34, color:'red'},\n  {number: 6, color:'black'},\n  {number: 27, color:'red'},\n  {number: 13, color:'black'},\n  {number: 36, color:'red'},\n  {number: 11, color:'black'},\n  {number: 30, color:'red'},\n  {number: 8, color:'black'},\n  {number: 23, color:'red'},\n  {number: 10, color:'black'},\n  {number: 5, color:'red'},\n  {number: 24, color:'black'},\n  {number: 16, color:'red'},\n  {number: 33, color:'black'},\n  {number: 1, color:'red'},\n  {number: 20, color:'black'},\n  {number: 14, color:'red'},\n  {number: 31, color:'black'},\n  {number: 9, color:'red'},\n  {number: 22, color:'black'},\n  {number: 18, color:'red'},\n  {number: 29, color:'black'},\n  {number: 7, color:'red'},\n  {number: 28, color:'black'},\n  {number: 12, color:'red'},\n  {number: 35, color:'black'},\n  {number: 3, color:'red'},\n  {number: 26, color:'black'},\n  {number: 0, color:'green'},\n  {number: 32, color:'red'},\n  {number: 15, color:'black'},\n];\n\n\nlet winRatio = 0;\n\n\nconst App =() => {\n\n  const [winIndex, setWinIndex] = useState(2)\n  const [roulette, setRoulette] = useState([\n    numbers[0],\n    numbers[1], \n    numbers[winIndex], \n    numbers[3], \n    numbers[4]\n  ]);\n  const [money, setMoney] = useState(500);\n  const [win, setWin] = useState('');\n  const [bet, setBet] = useState(0);\n  const [choose, setChoose] = useState('')\n\n\n\n  const handleStartGame = (bet, chooseColor, chooseNumber) => {\n    setBet(bet)\n    setChoose(chooseColor !== '' ? chooseColor : chooseNumber)\n    setWin('')\n    const newIndex = Math.floor(Math.random()*36 + 2)\n    setWinIndex(newIndex)\n    const timeEndAnimation = 70 * 37\n    const time = timeEndAnimation + 70 * newIndex + 70;\n\n    AnimationRoulette()\n    setTimeout(() => {\n      endRoulette(newIndex)\n    }, timeEndAnimation);\n\n    setTimeout(() => {\n      CheckResult(chooseColor, chooseNumber, newIndex, bet)\n    }, time);\n  }\n\n\n\n  const AnimationRoulette = () => {\n    let i = 2\n    const allAnimation = setInterval(() => {\n      if(i === numbers.length - 3){\n        i = numbers.length - 3\n        clearInterval(allAnimation)\n      }\n      setRoulette([\n        numbers[i - 2],\n        numbers[i - 1],\n        numbers[i],\n        numbers[i + 1],\n        numbers[i + 2],\n      ])\n      i = i + 1;\n    }, 70);\n  }\n\n\n\n  const endRoulette = (newIndex) => {\n    let i = 2;\n    const endAnimation = setInterval(() => {\n      if(i === newIndex){\n        clearInterval(endAnimation);\n      }\n      setRoulette([\n        numbers[i - 2],\n        numbers[i - 1],\n        numbers[i],\n        numbers[i + 1],\n        numbers[i + 2],\n      ])\n      i = i + 1;\n    }, 70);\n  }\n\n\n\n  const CheckResult = (chooseColor, chooseNumber, newindex, bet) => {\n    setRoulette([\n      numbers[newindex - 2],\n      numbers[newindex - 1],\n      numbers[newindex],\n      numbers[newindex + 1],\n      numbers[newindex + 2],\n    ])\n\n    if(chooseColor){\n      winRatio = 2;\n      if(chooseColor === 'zielony'){\n        winRatio = 50;\n      }\n    }else{\n      winRatio = 35;\n    }\n\n    if(chooseColor === numbers[newindex].color || chooseNumber === numbers[newindex].number){\n      setMoney((prev) => prev + bet * winRatio);\n      setWin(true);\n    }else{\n      setMoney((prev) => prev - bet);\n      setWin(false);\n    }\n  }\n\n\n\n  return (\n    <>\n      <h1>Ruletka</h1>\n      <Roulette roulette={roulette}/>\n      <h2>Monety: <span className='money'>{money}</span></h2>\n      <Bet startGame={handleStartGame} money={money} win={win} winRatio={winRatio} bet={bet} choose={choose}/>\n\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />,document.getElementById('root')\n);\n"],"sourceRoot":""}